<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Shared.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  
  <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter"/>

  <!-- Style and template for the DataGrid -->
  <ControlTemplate x:Key="DataGridTemplate" TargetType="{x:Type DataGrid}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="dataGridDisabling">
        <ColorAnimation Storyboard.TargetName="borderBackgroundBrush"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Background_Disable}"
                        Duration="0"/>
        <ColorAnimation Storyboard.TargetName="borderBrush"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Border_Disable}"
                        Duration="0"/>
      </Storyboard>
    </ControlTemplate.Resources>
    <Border x:Name="border"
            SnapsToDevicePixels="True"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}">
      <Border.Background>
        <SolidColorBrush x:Name="borderBackgroundBrush" Color="{StaticResource Color_Background_Normal}"/>
      </Border.Background>
      <Border.BorderBrush>
        <SolidColorBrush x:Name="borderBrush" Color="{StaticResource Color_Border_Normal}"/>
      </Border.BorderBrush>
      
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal"/>
          <VisualState x:Name="Disabled" Storyboard="{StaticResource dataGridDisabling}"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ValidationStates">
          <VisualState x:Name="Valid"/>
          <VisualState x:Name="InvalidFocused"/>
          <VisualState x:Name="InvalidUnfocused"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <ScrollViewer x:Name="DG_ScrollViewer"
                    Focusable="false"
                    Background="Black">
        <ScrollViewer.Template>
          <ControlTemplate TargetType="{x:Type ScrollViewer}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <Button Focusable="false"
                      Command="{x:Static DataGrid.SelectAllCommand}"
                      Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                                    Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                      Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
              <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                              Grid.Column="1"
                                              Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                    Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
              <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                      Grid.ColumnSpan="2"
                                      Grid.Row="1"
                                      CanContentScroll="{TemplateBinding CanContentScroll}"/>
              <ScrollBar x:Name="PART_VerticalScrollBar"
                         Grid.Column="2"
                         Grid.Row="0" Grid.RowSpan="3"
                         Orientation="Vertical"
                         ViewportSize="{TemplateBinding ViewportHeight}"
                         Maximum="{TemplateBinding ScrollableHeight}"
                         Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                               Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Grid Grid.Column="1" Grid.Row="2">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ScrollBar x:Name="PART_HorizontalScrollBar"
                           Grid.Column="1"
                           Orientation="Horizontal"
                           ViewportSize="{TemplateBinding ViewportWidth}"
                           Maximum="{TemplateBinding ScrollableWidth}"
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              </Grid>
            </Grid>
          </ControlTemplate>
        </ScrollViewer.Template>
        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
      </ScrollViewer>
    </Border>
  </ControlTemplate>
  <Style TargetType="{x:Type DataGrid}">
    <Setter Property="BorderBrush" Value="{StaticResource Brush_Border_Normal}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Template" Value="{StaticResource DataGridTemplate}"/>
    <Style.Triggers>
      <Trigger Property="IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <!-- Style and template for the DataGridCell -->
  <ControlTemplate x:Key="DataGridCellTemplate" TargetType="{x:Type DataGridCell}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="Hovering">
        <ColorAnimation Storyboard.TargetName="borderBackground"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Background_MouseOver}"
                        Duration="0"/>
        <ColorAnimation Storyboard.TargetName="borderBrush"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Border_MouseOver}"
                        Duration="0"/>
      </Storyboard>
      <Storyboard x:Key="CurrentOn">
        <ColorAnimation Storyboard.TargetName="borderBackground"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource CtrlBackgroundColor_Current}"
                        Duration="0"/>
      </Storyboard>
                  
    </ControlTemplate.Resources>
    <Border x:Name="border"
            BorderThickness="1"
            Padding="1"
            SnapsToDevicePixels="True">
      <Border.Background>
        <SolidColorBrush x:Name="borderBackground" Color="{StaticResource Color_Background_Normal}"/>
      </Border.Background>
      <Border.BorderBrush>
        <SolidColorBrush x:Name="borderBrush" Color="{StaticResource Color_Border_Normal}"/>
      </Border.BorderBrush>

      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal"/>
          <VisualState x:Name="MouseOver" Storyboard="{StaticResource Hovering}"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Unfocused" />
          <VisualState x:Name="Focused" />
        </VisualStateGroup>
        <VisualStateGroup x:Name="CurrentStates">
          <VisualState x:Name="Regular" />
          <VisualState x:Name="Current" Storyboard="{StaticResource CurrentOn}"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="InteractionStates">
          <VisualState x:Name="Display"/>
          <VisualState x:Name="Editing"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="SelectionStates">
          <VisualState x:Name="Selected"/>
          <VisualState x:Name="Unselected"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ValidationStates">
          <VisualState x:Name="Valid"/>
          <VisualState x:Name="InvalidFocused"/>
          <VisualState x:Name="InvalidUnfocused"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
    </Border>
  </ControlTemplate>
  <Style TargetType="{x:Type DataGridCell}">
    <Setter Property="Template" Value="{StaticResource ResourceKey=DataGridCellTemplate}"/>
  </Style>

  <!-- Style and template for the DataGridRow -->
  <ControlTemplate x:Key="DataGridRowTemplate" TargetType="{x:Type DataGridRow}">
    <Border x:Name="dataGridRowBorder" BorderThickness="0.5" SnapsToDevicePixels="True">
      <Border.BorderBrush>
        <SolidColorBrush x:Name="borderBrush" Color="{StaticResource Color_Border_Normal}"/>
      </Border.BorderBrush>
      <Border.Background>
        <SolidColorBrush x:Name="borderBackground" Color="{StaticResource Color_Background_Normal}"/>
      </Border.Background>

      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal"/>

          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="borderBrush"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Border_MouseOver}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="borderBackground"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Background_MouseOver}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>

          <VisualState x:Name="MouseOver_Editing">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="borderBrush"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource CtrlBorderColor_MouseOver_Editing}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="borderBackground"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource CtrlBackgroundColor_MouseOver_Editing}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>

          <VisualState x:Name="MouseOver_Selected">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="borderBrush"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Border_Selected}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="borderBackground"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Background_Selected}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>

          <VisualState x:Name="MouseOver_Unfocused_Selected">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="borderBrush"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Border_Selected}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="borderBackground"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Background_Selected}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>

          <VisualState x:Name="MouseOver_Unfocused_Editing">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="borderBrush"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource CtrlBorderColor_MouseOver_Unfocused_Editing}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="borderBackground"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource CtrlBackgroundColor_MouseOver_Unfocused_Editing}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>

          <VisualState x:Name="Normal_AlternatingRow">
            <Storyboard>
              <ColorAnimationUsingKeyFrames 
                      Storyboard.TargetName="dataGridRowBorder" 
                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color_Background_Normal}"/>
              </ColorAnimationUsingKeyFrames>
              <ColorAnimationUsingKeyFrames 
                      Storyboard.TargetName="dataGridRowBorder" 
                      Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Color_Background_Normal}"/>
              </ColorAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>

          <VisualState x:Name="Normal_Selected">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="borderBrush"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Border_Selected}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="borderBackground"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Background_Selected}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>

          <VisualState x:Name="Unfocused_Selected">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="borderBrush"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource CtrlBorderColor_Unfocused_Selected}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="borderBackground"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource CtrlBackgroundColor_Unfocused_Selected}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>

          <VisualState x:Name="Normal_Editing">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="borderBrush"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Border_Selected}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="borderBackground"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Background_Selected}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>

          <VisualState x:Name="Unfocused_Editing">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="borderBrush"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Border_Selected}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="borderBackground"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Background_Selected}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>

        </VisualStateGroup>
        <VisualStateGroup x:Name="ValidationStates">
          <VisualState x:Name="Valid"/>
          <VisualState x:Name="InvalidFocused"/>
          <VisualState x:Name="InvalidUnfocused"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <SelectiveScrollingGrid>
        <SelectiveScrollingGrid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="*" />
        </SelectiveScrollingGrid.ColumnDefinitions>
        <SelectiveScrollingGrid.RowDefinitions>
          <RowDefinition Height="*" />
          <RowDefinition Height="Auto" />
        </SelectiveScrollingGrid.RowDefinitions>
        <DataGridCellsPresenter Grid.Column="1"
                                      ItemsPanel="{TemplateBinding ItemsPanel}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        <DataGridDetailsPresenter Grid.Column="1"
                                        Grid.Row="1"
                                        Visibility="{TemplateBinding DetailsVisibility}"
                                        SelectiveScrollingGrid.SelectiveScrollingOrientation=
                  "{Binding AreRowDetailsFrozen, 
                  ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
                  Converter={x:Static DataGrid.RowDetailsScrollingConverter}, 
                  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        <DataGridRowHeader Grid.RowSpan="2"
                                 SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                 Visibility="{Binding HeadersVisibility, 
                  ConverterParameter={x:Static DataGridHeadersVisibility.Row}, 
                  Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
      </SelectiveScrollingGrid>
    </Border>
  </ControlTemplate>
  
  <Style TargetType="{x:Type DataGridRow}">
    <Setter Property="Background" Value="{StaticResource Brush_Background_Normal}"/>
    <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_Normal}"/>
    <Setter Property="SnapsToDevicePixels" Value="true"/>
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Foreground="Red"
                     Margin="2,0,0,0"
                     Text="!"
                     VerticalAlignment="Center" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template" Value="{StaticResource ResourceKey=DataGridRowTemplate}"/>
  </Style>

  <!-- Style and template for the resize control on the DataGridRowHeader -->
  <ControlTemplate x:Key="RowHeaderGripperTemplate" TargetType="{x:Type Thumb}">
    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
  </ControlTemplate>
  <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Height" Value="8"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Cursor" Value="SizeNS"/>
    <Setter Property="Template" Value="{StaticResource RowHeaderGripperTemplate}"/>
  </Style>

  <!-- Style and template for the DataGridRowHeader -->
  <ControlTemplate x:Key="DataGridRowHeaderTemplate" TargetType="{x:Type DataGridRowHeader}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="Hovering">
        <ColorAnimation Storyboard.TargetName="rowHeaderBorderBrush"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Border_MouseOver}"
                        Duration="0"/>
        <ColorAnimation Storyboard.TargetName="rowHeaderBackgroundBrush"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Background_MouseOver}"
                        Duration="0"/>
      </Storyboard>
      <Storyboard x:Key="HoveringCurrentRow">
        <ColorAnimation Storyboard.TargetName="rowHeaderBorderBrush"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Border_MouseOver}"
                        Duration="0"/>
        <ColorAnimation Storyboard.TargetName="rowHeaderBackgroundBrush"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Background_MouseOver}"
                        Duration="0"/>
      </Storyboard>
    </ControlTemplate.Resources>
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal" />
          <VisualState x:Name="Normal_CurrentRow" Storyboard="{StaticResource HoveringCurrentRow}"/>
          <VisualState x:Name="Unfocused_EditingRow" />
          <VisualState x:Name="Normal_EditingRow" />
          <VisualState x:Name="MouseOver" Storyboard="{StaticResource Hovering}"/>
          <VisualState x:Name="MouseOver_CurrentRow"/>
          <VisualState x:Name="MouseOver_Unfocused_EditingRow"/>
          <VisualState x:Name="MouseOver_EditingRow"/>
          <VisualState x:Name="MouseOver_Unfocused_Selected"/>
          <VisualState x:Name="MouseOver_Selected"/>
          <VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected"/>
          <VisualState x:Name="MouseOver_CurrentRow_Selected"/>
          <VisualState x:Name="Unfocused_Selected"/>
          <VisualState x:Name="Unfocused_CurrentRow_Selected"/>
          <VisualState x:Name="Normal_CurrentRow_Selected"/>
          <VisualState x:Name="Normal_Selected"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ValidationStates">
          <VisualState x:Name="Valid"/>
          <VisualState x:Name="InvalidFocused"/>
          <VisualState x:Name="InvalidUnfocused"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <Border x:Name="rowHeaderBorder" Width="5" BorderThickness="0.3">
        <Border.BorderBrush>
          <SolidColorBrush x:Name="rowHeaderBorderBrush" Color="{StaticResource Color_Border_Normal}"/>
        </Border.BorderBrush>
        <Border.Background>
          <SolidColorBrush x:Name="rowHeaderBackgroundBrush" Color="{StaticResource Color_Background_Normal}"/>
        </Border.Background>
        <StackPanel Orientation="Horizontal">
          <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          <Control SnapsToDevicePixels="false"
                   Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                   Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>
        </StackPanel>
      </Border>
      <Thumb x:Name="PART_TopHeaderGripper" 
             Style="{StaticResource RowHeaderGripperStyle}" 
             VerticalAlignment="Top"/>
      <Thumb x:Name="PART_BottomHeaderGripper" 
             Style="{StaticResource RowHeaderGripperStyle}" 
             VerticalAlignment="Bottom"/>
    </Grid>
  </ControlTemplate>
  <Style TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Template" Value="{StaticResource ResourceKey=DataGridRowHeaderTemplate}"/>
  </Style>

  <!-- Style and template for the resize control on the DataGridColumnHeader -->
  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Width" Value="8"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Cursor" Value="SizeWE"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Style and template for the DataGridColumnHeader -->
  <ControlTemplate x:Key="DataGridColumnHeaderTemplate" TargetType="{x:Type DataGridColumnHeader}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="Hovering">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetName="columnHeaderBorderHover" 
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="Pressing">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetName="columnHeaderBorderPressed" 
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </ControlTemplate.Resources>
    <ControlTemplate.Triggers>
      <Trigger Property="IsMouseOver" Value="true">
        <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_MouseOver}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="true">
        <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_Pressed}"/>
      </Trigger>
    </ControlTemplate.Triggers>
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal"/>
          <VisualState x:Name="MouseOver" Storyboard="{StaticResource Hovering}"/>
          <VisualState x:Name="Pressed" Storyboard="{StaticResource Pressing}"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="SortStates">
          <VisualState x:Name="SortAscending"/>
          <VisualState x:Name="SortDescending"/>
          <VisualState x:Name="Unsorted"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ValidationStates">
          <VisualState x:Name="InvalidFocused"/>
          <VisualState x:Name="InvalidUnfocused"/>
          <VisualState x:Name="Valid"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Border x:Name="columnHeaderBorder" 
              BorderThickness="1"
              CornerRadius="2"
              Padding="6,1,6,1" 
              Background="{StaticResource Brush_Background_Normal}"
              BorderBrush="{StaticResource Brush_Border_Normal}"/>

      <Border x:Name="columnHeaderBorderHover" 
              Padding="6,1,6,1" 
              CornerRadius="2"
              Background="{StaticResource Brush_Background_MouseOver}"
              BorderBrush="{StaticResource Brush_Border_MouseOver}"
              BorderThickness="1"
              Opacity="0"/>

      <Border x:Name="columnHeaderBorderPressed" 
              Padding="6,1,6,1" 
              CornerRadius="2"
              Background="{StaticResource Brush_Background_Pressed}"
              BorderBrush="{StaticResource Brush_Border_Pressed}"
              BorderThickness="1"
              Opacity="0"/>

      <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        Margin="6,0,0,0"/>

      <Thumb x:Name="PART_LeftHeaderGripper"
             HorizontalAlignment="Left"
             Style="{StaticResource ColumnHeaderGripperStyle}"/>
      <Thumb x:Name="PART_RightHeaderGripper"
             HorizontalAlignment="Right"
             Style="{StaticResource ColumnHeaderGripperStyle}"/>
    </Grid>
  </ControlTemplate>
  <Style TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Template" Value="{StaticResource ResourceKey=DataGridColumnHeaderTemplate}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="FontWeight" Value="Bold"/>
    <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_Normal}"/>
  </Style>

  <!-- Style and template for the DataGridColumnHeadersPresenter -->
  <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <Grid>
            <DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False"/>
            <ItemsPresenter/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Style and template for the button in the upper left corner of the DataGrid -->
  <ControlTemplate x:Key="CornerButtonTemplate" TargetType="{x:Type Button}">
    <Grid>
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal"/>
          <VisualState x:Name="MouseOver">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="cornerBorderStroke"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Border_MouseOver}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="cornerBorderFill"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Background_MouseOver}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Pressed">
            <Storyboard>
              <ColorAnimation Storyboard.TargetName="cornerBorderStroke"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Border_Pressed}"
                              Duration="0"/>
              <ColorAnimation Storyboard.TargetName="cornerBorderFill"
                              Storyboard.TargetProperty="Color"
                              To="{StaticResource Color_Background_Pressed}"
                              Duration="0"/>
            </Storyboard>
          </VisualState>
          <VisualState x:Name="Disabled">
            <Storyboard>
              <ObjectAnimationUsingKeyFrames 
                      Storyboard.TargetProperty="(UIElement.Visibility)" 
                      Storyboard.TargetName="Arrow">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </VisualState>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle x:Name="cornerBorder" SnapsToDevicePixels="True">
        <Rectangle.Stroke>
          <SolidColorBrush x:Name="cornerBorderStroke" Color="{StaticResource Color_Border_Normal}"/>
        </Rectangle.Stroke>
        <Rectangle.Fill>
          <SolidColorBrush x:Name="cornerBorderFill" Color="{StaticResource Color_Background_Normal}"/>
        </Rectangle.Fill>
      </Rectangle>
      <Polygon x:Name="Arrow"
                     HorizontalAlignment="Right"
                     Margin="8,8,3,3"
                     Opacity="0.15"
                     Points="0,10 10,10 10,0"
                     Stretch="Uniform"
                     VerticalAlignment="Bottom"
                     Fill="{StaticResource Brush_Foreground_Normal}">
      </Polygon>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="IsPressed" Value="true">
        <Setter Property="Foreground" Value="White"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type Button}"
         x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
    <Setter Property="Template" Value="{StaticResource CornerButtonTemplate}"/>
  </Style>

</ResourceDictionary>