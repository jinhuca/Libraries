<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Shared.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="Hovering">
        <DoubleAnimation Storyboard.TargetName="rectangleCommon"
                         Storyboard.TargetProperty="Opacity"
                         To="1" Duration="0"/>
        <ColorAnimation Storyboard.TargetName="rectangleCommonStroke"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Border_MouseOver}" 
                        Duration="0"/>
        <ColorAnimation Storyboard.TargetName="rectangleCommonFill"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Background_MouseOver}" 
                        Duration="0"/>
      </Storyboard>
      <Storyboard x:Key="Pressing">
        <DoubleAnimation Storyboard.TargetName="rectangleCommon"
                         Storyboard.TargetProperty="Opacity"
                         To="1" Duration="0"/>
        <ColorAnimation Storyboard.TargetName="rectangleCommonStroke"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Border_Pressed}"
                        Duration="0"/>
        <ColorAnimation Storyboard.TargetName="rectangleCommonFill"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Background_Pressed}"
                        Duration="0"/>
        <DoubleAnimation Storyboard.TargetName="rectangleFocus"
                         Storyboard.TargetProperty="Opacity"
                         To="0" Duration="0"/>
      </Storyboard>
      <Storyboard x:Key="Disabling">
        <DoubleAnimation Storyboard.TargetName="rectangleCommon"
                         Storyboard.TargetProperty="Opacity"
                         To="1" Duration="0"/>
        <ColorAnimation Storyboard.TargetName="rectangleCommonStroke"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Border_Disable}"
                        Duration="0"/>
        <ColorAnimation Storyboard.TargetName="rectangleCommonFill"
                        Storyboard.TargetProperty="Color"
                        To="{StaticResource Color_Background_Disable}"
                        Duration="0"/>
      </Storyboard>
      <Storyboard x:Key="Focusing">
        <DoubleAnimation Storyboard.TargetName="rectangleFocus"
                         Storyboard.TargetProperty="Opacity"
                         To="1" Duration="0"/>
      </Storyboard>
      <Storyboard x:Key="FocusingOff">
        <DoubleAnimation Storyboard.TargetName="rectangleFocus"
                         Storyboard.TargetProperty="Opacity"
                         To="0" Duration="0"/>
      </Storyboard>
      <Storyboard x:Key="InvalidingFocused">
        <DoubleAnimation Storyboard.TargetName="rectangleInvalid"
                         Storyboard.TargetProperty="Opacity"
                         To="1" Duration="0"/>
        <DoubleAnimation Storyboard.TargetName="rectangleBackground"
                         Storyboard.TargetProperty="Opacity"
                         To="0" Duration="0"/>
      </Storyboard>
      <Storyboard x:Key="InvalidingUnfocused">
        <DoubleAnimation Storyboard.TargetName="rectangleInvalid"
                         Storyboard.TargetProperty="Opacity"
                         To="0.5" Duration="0"/>
        <DoubleAnimation Storyboard.TargetName="rectangleBackground"
                         Storyboard.TargetProperty="Opacity"
                         To="0" Duration="0"/>
      </Storyboard>
    </ControlTemplate.Resources>

    <Grid x:Name="gridButton">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal"/>
          <VisualState x:Name="MouseOver" Storyboard="{StaticResource Hovering}"/>
          <VisualState x:Name="Pressed" Storyboard="{StaticResource Pressing}"/>
          <VisualState x:Name="Disabled" Storyboard="{StaticResource Disabling}"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Focused" Storyboard="{StaticResource Focusing}"/>
          <VisualState x:Name="Unfocused" Storyboard="{StaticResource FocusingOff}"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ValidationStates">
          <VisualState x:Name="Valid"/>
          <VisualState x:Name="InvalidFocused" Storyboard="{StaticResource InvalidingFocused}"/>
          <VisualState x:Name="InvalidingUnfocused" Storyboard="{StaticResource InvalidingUnfocused}"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <Rectangle x:Name="rectangleBackground" 
                 RadiusX="2" RadiusY="2" Opacity="1"
                 Fill="{TemplateBinding Background}"
                 Stroke="{TemplateBinding BorderBrush}"
                 StrokeThickness="{TemplateBinding BorderThickness}"/>

      <Rectangle x:Name="rectangleCommon" RadiusX="2" RadiusY="2" Opacity="0"
                 StrokeThickness="1.3">
        <Rectangle.Stroke>
          <SolidColorBrush x:Name="rectangleCommonStroke" Color="{StaticResource Color_Border_Normal}"/>
        </Rectangle.Stroke>
        <Rectangle.Fill>
          <SolidColorBrush x:Name="rectangleCommonFill" Color="{StaticResource Color_Background_Normal}"/>
        </Rectangle.Fill>
      </Rectangle>

      <Rectangle x:Name="rectangleFocus"
                 RadiusX="2" RadiusY="2" Opacity="0"
                 Stroke="{StaticResource Brush_Border_Focused}"
                 StrokeThickness="1.3"
                 StrokeDashArray="1,2"
                 Fill="{StaticResource Brush_Background_Focused}"/>

      <Rectangle x:Name="rectangleInvalid"
                 RadiusX="2" RadiusY="2" Opacity="0"
                 StrokeThickness="1.3"
                 StrokeDashArray="1,2"
                 Stroke="{StaticResource Brush_Border_InvalidFocused}"
                 Fill="{StaticResource Brush_Background_InvalidFocused}"/>

      <ContentPresenter x:Name="contentPresenter"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                        Margin="{TemplateBinding Padding}" 
                        Focusable="False"
                        RecognizesAccessKey="True"/>
      
    </Grid>
  </ControlTemplate>

  <Style TargetType="{x:Type Button}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Focusable" Value="True"/>
    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Background" Value="{StaticResource Brush_Background_Normal_Darker}"/>
    <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_Normal}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Brush_Border_Normal}"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="4,1"/>
    <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_MouseOver}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_Disable}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_Pressed}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>