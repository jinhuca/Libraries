<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="Shared.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <ControlTemplate x:Key="ListBoxItemControlTemplate" TargetType="{x:Type ListBoxItem}">
    <ControlTemplate.Resources>
      <Storyboard x:Key="Hovering">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetName="hoverRectangle"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>

      <!--<Storyboard x:Key="HoverOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetName="hoverRectangle" 
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>-->

      <Storyboard x:Key="Selecting">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetName="selectedRectangle" 
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>

      <Storyboard x:Key="SelectingOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetName="selectedRectangle" 
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>

      <Storyboard x:Key="Focusing">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetName="focusRectangle" 
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>

      <Storyboard x:Key="FocusingOff">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetName="focusRectangle" 
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>

      <Storyboard x:Key="Disabling">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" 
                                       Storyboard.TargetName="disableRectangle" 
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
          <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>

    </ControlTemplate.Resources>

    <Grid x:Name="gridListBoxItem" 
          SnapsToDevicePixels="true" 
          Margin="0.5" 
          Background="Transparent">
      <VisualStateManager.VisualStateGroups>
        <VisualStateGroup x:Name="CommonStates">
          <VisualState x:Name="Normal"/>
          <VisualState x:Name="MouseOver" Storyboard="{StaticResource Hovering}"/>
          <VisualState x:Name="Disabled" Storyboard="{StaticResource Disabling}"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="FocusStates">
          <VisualState x:Name="Focused" Storyboard="{StaticResource Focusing}"/>
          <VisualState x:Name="Unfocused" Storyboard="{StaticResource FocusingOff}"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="SelectionStates">
          <VisualState x:Name="Unselected" Storyboard="{StaticResource SelectingOff}"/>
          <VisualState x:Name="Selected" Storyboard="{StaticResource Selecting}"/>
          <VisualState x:Name="SelectedUnfocused" Storyboard="{StaticResource Selecting}"/>
        </VisualStateGroup>
        <VisualStateGroup x:Name="ValidationStates">
          <VisualState x:Name="Valid"/>
          <VisualState x:Name="InvalidFocused"/>
          <VisualState x:Name="InvalidUnfocused"/>
        </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>
      <Rectangle x:Name="backRectangle" 
                 IsHitTestVisible="False" 
                 Opacity="1" 
                 Fill="{StaticResource Brush_Background_Normal}" 
                 RadiusX="1" RadiusY="1"/>
      <Rectangle x:Name="hoverRectangle" 
                 IsHitTestVisible="False" 
                 Opacity="0" 
                 
                 Fill="{StaticResource Brush_Background_MouseOver}" 
                 RadiusX="1" RadiusY="1"/>
      <Rectangle x:Name="selectedRectangle" 
                 IsHitTestVisible="False" 
                 Opacity="0" 
                 Stroke="{StaticResource Brush_Border_Selected}"
                 StrokeThickness="1"
                 Fill="{StaticResource Brush_Background_Selected}" 
                 RadiusX="1" RadiusY="1"/>
      <ContentPresenter x:Name="contentPresenter" Margin="3,1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
      <Rectangle x:Name="focusRectangle" 
                 Stroke="{StaticResource Brush_Border_Focused}" 
                 StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0"/>
      <Rectangle x:Name="disableRectangle"
                 Stroke="{StaticResource Brush_Border_Disable}"
                 StrokeThickness="1"
                 RadiusX="1" RadiusY="1" Opacity="0"
                 Fill="{StaticResource Brush_Background_Disable}"/>
    </Grid>

    <ControlTemplate.Triggers>
      <!--<Trigger Property="IsFocused" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource Focusing}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource FocusingOff}"/>
        </Trigger.ExitActions>
      </Trigger>-->

      <!--<Trigger Property="IsSelected" Value="true">
        <Trigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource Selecting}"/>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource SelectingOff}"/>
        </Trigger.ExitActions>
      </Trigger>-->

      <!--<MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsMouseOver" Value="True"/>
          <Condition Property="IsSelected" Value="False"/>
        </MultiTrigger.Conditions>
        <MultiTrigger.EnterActions>
          <BeginStoryboard Storyboard="{StaticResource Hovering}"/>
        </MultiTrigger.EnterActions>
        <MultiTrigger.ExitActions>
          <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
        </MultiTrigger.ExitActions>
      </MultiTrigger>

      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="True"/>
          <Condition Property="IsMouseOver" Value="True"/>
        </MultiTrigger.Conditions>
      </MultiTrigger>-->

      <!--<Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
      </Trigger>-->

    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="ListBoxItem">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Template" Value="{StaticResource ListBoxItemControlTemplate}"/>
    <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_Normal}"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Foreground" Value="{StaticResource Brush_Foreground_MouseOver}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>